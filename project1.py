# -*- coding: utf-8 -*-
"""Project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15tGj_O6s_dniiuusnm38A17e2aGuSPQd

Bike Store Sales Project Lab
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

sales = pd.read_csv("sales_data.csv")
sales.head()

sales.info()

sales.describe()

sales.shape

"""Numerical Data Analysis"""

sales['Unit_Cost'].mean()

sales['Unit_Cost'].median()

sales['Unit_Cost'].plot(kind='box', vert=False, figsize=(14, 6))

ax = sales['Unit_Cost'].plot(kind='density', figsize=(14,6)) # kde
ax.axvline(sales['Unit_Cost'].mean(), color='red')
ax.axvline(sales['Unit_Cost'].median(), color='green')

ax = sales['Unit_Cost'].plot(kind='hist', figsize=(14,6))
ax.set_ylabel('Number of Sales')
ax.set_xlabel('dollars')

"""Categorical analysis and visualization


"""

sales.head()

sales['Age_Group'].value_counts()

sales['Age_Group'].value_counts().plot(kind='bar')

sales.info()

sales['Age_Group'].value_counts().plot(kind='pie', figsize=(6,6))

sales.plot(kind='scatter', x='Customer_Age', y='Revenue', figsize=(6,6))

plt.figure(figsize=(10, 8))  # Set the figure size
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f', linewidths=0.5)
plt.title('Correlation Matrix')
plt.show()

sales.plot(kind='scatter', x='Revenue', y='Profit', figsize=(14, 6), color='green')

sales['Revenue'].plot(kind='hist', bins=100, figsize=(14,6))





boxplot_cols = ['Year', 'Customer_Age', 'Order_Quantity', 'Unit_Cost', 'Unit_Price', 'Profit']

sales[boxplot_cols].plot(kind='box', subplots=True, layout=(2,3), figsize=(14,8))

"""Column wrangling


"""

sales['Revenue_per_Age'] = sales['Revenue'] / sales['Customer_Age']

sales['Revenue_per_Age'].head()

"""Selection & Indexing:


"""

sales.loc[sales['State'] == 'Kentucky']

"""How many records belong to Age Group Youth (<25) or Adults (35-64)?

"""

sales.loc[sales['Age_Group'] == 'Adults (35-64)', 'Revenue'].mean()

"""Get the mean revenue of the sales group Adults (35-64) in United States

"""

sales.loc[(sales['Age_Group'] == 'Adults (35-64)') & (sales['Country'] == 'United States'), 'Revenue'].mean()

"""sales made in France"""

sales.loc[sales['Country'] == 'France', 'Revenue'].head()